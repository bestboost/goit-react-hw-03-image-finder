{"ast":null,"code":"var _jsxFileName = \"/Users/igorgudzovskiy/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport { Box } from '../components/Box';\nimport Searchbar from './Searchbar/Searchbar'; // import ImageGallery from './ImageGallery/ImageGallery';\n\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport LoderButton from './Button/Button';\nimport ModalWindow from './Modal/Modal';\nimport Loader from './Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      apiImages: null,\n      searchField: '',\n      loading: false,\n      showModal: false,\n      inputValue: '',\n      error: null,\n      selectedImage: null,\n      page: 1\n    };\n\n    this.formSubmit = inputValue => {\n      this.setState({\n        inputValue\n      });\n    };\n\n    this.toggleModal = () => {\n      this.setState(_ref => {\n        let {\n          showModal\n        } = _ref;\n        return {\n          showModal: !showModal\n        };\n      });\n    };\n\n    this.selectImage = largeImageURL => {\n      this.setState({\n        selectedImage: largeImageURL\n      });\n    };\n\n    this.loadMore = () => {\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n  }\n\n  componentDidUpdate(_, prevState) {\n    const prevValue = prevState.inputValue;\n    const nextValue = this.state.inputValue;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevValue !== nextValue || prevPage !== nextPage) {\n      this.setState({\n        loading: true,\n        apiImages: null\n      });\n      fetch(`https://pixabay.com/api/?q=${nextValue}&page=${nextPage}&key=29692752-5f9a27c26e6deec7970509d3f&image_type=photo&orientation=horizontal&per_page=12`).then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject(new Error(`Upsss, no image ${nextValue}!`));\n      }).then(apiImages => this.setState({\n        apiImages: apiImages.hits\n      })).catch(error => this.setState({\n        error\n      })).finally(() => this.setState({\n        loading: false\n      }));\n    }\n  }\n\n  render() {\n    const {\n      apiImages,\n      showModal,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: '1fr',\n        gridGap: '16',\n        paddingBottom: '24'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onSearch: this.formSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this), apiImages && /*#__PURE__*/_jsxDEV(ImageGalleryItem, {\n        images: this.state.apiImages,\n        onClick: this.toggleModal,\n        onSelect: this.selectImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 12\n      }, this), apiImages.hits !== [] && /*#__PURE__*/_jsxDEV(LoderButton, {\n        onClick: this.loadMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }, this), showModal && /*#__PURE__*/_jsxDEV(ModalWindow, {\n        onClose: this.toggleModal,\n        src: this.state.selectedImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        autoClose: 3000,\n        position: \"top-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/igorgudzovskiy/Documents/GitHub/goit-react-hw-03-image-finder/src/components/App.jsx"],"names":["React","Component","Box","Searchbar","ImageGalleryItem","LoderButton","ModalWindow","Loader","ToastContainer","App","state","apiImages","searchField","loading","showModal","inputValue","error","selectedImage","page","formSubmit","setState","toggleModal","selectImage","largeImageURL","loadMore","prevState","componentDidUpdate","_","prevValue","nextValue","prevPage","nextPage","fetch","then","response","ok","json","Promise","reject","Error","hits","catch","finally","render","display","gridTemplateColumns","gridGap","paddingBottom","message"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Box } from '../components/Box';\nimport Searchbar from './Searchbar/Searchbar';\n// import ImageGallery from './ImageGallery/ImageGallery';\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\nimport LoderButton from './Button/Button';\nimport ModalWindow from './Modal/Modal';\nimport Loader from './Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass App extends Component  {\n\n state = {\n      apiImages: null,\n      searchField: '',\n      loading: false,\n      showModal: false,\n      inputValue: '',\n      error: null,\n      selectedImage: null,\n      page: 1,\n };\n\n  componentDidUpdate(_, prevState) {\n\n     const prevValue = prevState.inputValue;\n     const nextValue = this.state.inputValue;\n     const prevPage = prevState.page;\n     const nextPage = this.state.page;\n\n    if (prevValue !== nextValue ||\n      prevPage !== nextPage ) {\n      this.setState({loading: true, apiImages: null})\n      \n      fetch(`https://pixabay.com/api/?q=${nextValue}&page=${nextPage}&key=29692752-5f9a27c26e6deec7970509d3f&image_type=photo&orientation=horizontal&per_page=12`)\n      .then(response => {\n        if(response.ok) {\n          return response.json();\n        } \n   \n        return Promise.reject(\n          new Error(`Upsss, no image ${nextValue}!`),\n        );\n     \n      })\n\n      .then(apiImages => this.setState({apiImages: apiImages.hits})) \n      .catch(error => this.setState({error})) \n      .finally(() => this.setState({loading: false}));\n    \n    } \n  }\n\n  formSubmit =  inputValue => {\n    this.setState({inputValue});\n  }\n \n toggleModal = () => {\n  this.setState(({showModal}) => ({\n    showModal: !showModal,\n  }));\n }; \n\nselectImage = largeImageURL => {\n  this.setState({selectedImage: largeImageURL});\n}\n\nloadMore = () => {\n  this.setState(prevState => ({\n    page: prevState.page + 1,\n  }));\n};\n\n render() {\n  const {apiImages, showModal, loading, error} = this.state;\n\n  return (\n    <Box\n      style={{\n        display: 'grid',\n        gridTemplateColumns: '1fr',\n        gridGap: '16',\n        paddingBottom: '24',\n      }}\n    >  \n      <Searchbar onSearch={this.formSubmit}/>\n     \n      {apiImages && \n           <ImageGalleryItem images={this.state.apiImages} onClick={this.toggleModal} onSelect={this.selectImage}/>  \n      }\n       {apiImages.hits !==[] && \n        <LoderButton onClick={this.loadMore}/>}\n       {error && <h1>{error.message}</h1>}\n      {loading && <Loader/>} \n      {showModal && <ModalWindow onClose={this.toggleModal} src={this.state.selectedImage}/>}\n      <ToastContainer autoClose={3000} position=\"top-center\"/>\n    </Box>\n  ); \n };\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}