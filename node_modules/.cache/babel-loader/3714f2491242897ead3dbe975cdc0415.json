{"ast":null,"code":"var _jsxFileName = \"/Users/igorgudzovskiy/Documents/GitHub/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Overlay, Modal, ModalImage } from './Modal.styled';\nimport { createPortal } from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal-root');\n\nclass ModalWindow extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        this.props.onClose();\n      }\n    };\n\n    this.handleBackdropClick = event => {\n      console.log('drop');\n\n      if (event.currentTarget === event.target) {\n        this.props.onClose();\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  render() {\n    const {\n      src\n    } = this.props;\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: this.handleBackdropClick,\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        children: [\" \", this.props.children, src && /*#__PURE__*/_jsxDEV(ModalImage, {\n          src: src,\n          alt: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), modalRoot);\n  }\n\n}\n\nModalWindow.propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func\n};\n;\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/igorgudzovskiy/Documents/GitHub/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx"],"names":["React","Component","PropTypes","Overlay","Modal","ModalImage","createPortal","modalRoot","document","querySelector","ModalWindow","handleKeyDown","event","code","props","onClose","handleBackdropClick","console","log","currentTarget","target","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","src","children","propTypes","node","onClick","func"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,EAAiBC,KAAjB,EAAwBC,UAAxB,QAAyC,gBAAzC;AACA,SAAQC,YAAR,QAA2B,WAA3B;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAlB;;AAGA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAepCU,aAfoC,GAepBC,KAAK,IAAI;AACvB,UAAGA,KAAK,CAACC,IAAN,KAAe,QAAlB,EAA4B;AAC1B,aAAKC,KAAL,CAAWC,OAAX;AACD;AACF,KAnBmC;;AAAA,SAqBpCC,mBArBoC,GAqBdJ,KAAK,IAAI;AAC/BK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACE,UAAGN,KAAK,CAACO,aAAN,KAAwBP,KAAK,CAACQ,MAAjC,EAAyC;AACvC,aAAKN,KAAL,CAAWC,OAAX;AACD;;AAAA;AACF,KA1BmC;AAAA;;AAOpCM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKZ,aAAxC;AACD;;AAEDa,EAAAA,oBAAoB,GAAI;AACtBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKd,aAA3C;AACD;;AAeDe,EAAAA,MAAM,GAAG;AACN,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKb,KAAnB;AACC,wBAAOR,YAAY,eACf,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKU,mBAAvB;AAAA,6BACA,QAAC,KAAD;AAAA,wBAAS,KAAKF,KAAL,CAAWc,QAApB,EACAD,GAAG,iBAAK,QAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,GAAjB;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADe,EAKLpB,SALK,CAAnB;AAQF;;AAtCkC;;AAA9BG,W,CAEGmB,S,GAAY;AACjBD,EAAAA,QAAQ,EAAE1B,SAAS,CAAC4B,IADH;AAEjBC,EAAAA,OAAO,EAAE7B,SAAS,CAAC8B;AAFF,C;AAqCpB;AAED,eAAetB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {Overlay, Modal, ModalImage} from './Modal.styled';\nimport {createPortal} from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\n\nclass ModalWindow extends Component {\n\n  static propTypes = {\n    children: PropTypes.node,\n    onClick: PropTypes.func,\n  }\n\ncomponentDidMount() {\n  window.addEventListener('keydown', this.handleKeyDown);\n};\n\ncomponentWillUnmount () {\n  window.removeEventListener('keydown', this.handleKeyDown);\n}\n\nhandleKeyDown = event => {\n  if(event.code === 'Escape') {\n    this.props.onClose();\n  }\n};\n\nhandleBackdropClick = event => {\nconsole.log('drop')\n  if(event.currentTarget === event.target) {\n    this.props.onClose();\n  };\n};\n\nrender() {\n   const {src} = this.props  \n    return createPortal(\n        <Overlay onClick={this.handleBackdropClick}>\n        <Modal> {this.props.children}\n       {src &&  <ModalImage src={src} alt=\"image\"/>}\n        </Modal>\n      </Overlay>, modalRoot,\n      \n    );\n };\n};\n\nexport default ModalWindow;"]},"metadata":{},"sourceType":"module"}